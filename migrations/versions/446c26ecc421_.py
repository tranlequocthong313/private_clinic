"""empty message

Revision ID: 446c26ecc421
Revises: 
Create Date: 2024-04-23 11:09:44.798750

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '446c26ecc421'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medicine_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Unicode(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('medicine_units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Unicode(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('policies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.UnicodeText(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('EXAMINATION_FEE', 'NUMBER_OF_PATIENTS', name='policytype'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.String(length=11), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('PATIENT', 'ADMIN', 'DOCTOR', 'NURSE', 'CASHIER', name='accountrole'), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('appointment_schedules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('nurse_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['nurse_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date')
    )
    op.create_table('medicines',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('manufacturing_date', sa.Date(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=False),
    sa.Column('price', sa.Double(), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('medicine_unit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medicine_unit_id'], ['medicine_units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('medical_registrations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('symptom', sa.UnicodeText(), nullable=True),
    sa.Column('date_of_visit', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('status', sa.Enum('REGISTERED', 'STAGING', 'SCHEDULED', 'CANCELED', 'ARRIVED', 'IN_PROGRESS', 'UNPAID', 'COMPLETED', name='medicalregistrationstatus'), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('appointment_schedule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_schedule_id'], ['appointment_schedules.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine_medicinetype',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('medicine_id', sa.String(length=50), nullable=False),
    sa.Column('medicine_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicines.id'], ),
    sa.ForeignKeyConstraint(['medicine_type_id'], ['medicine_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_examinations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('diagnosis', sa.UnicodeText(), nullable=True),
    sa.Column('advice', sa.UnicodeText(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('fulfilled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id'], ['medical_registrations.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Double(), nullable=False),
    sa.Column('fulfilled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('cashier_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cashier_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id'], ['medical_examinations.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_examination_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('medical_examination_id', sa.Integer(), nullable=False),
    sa.Column('medicine_id', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('dosage', sa.UnicodeText(), nullable=False),
    sa.ForeignKeyConstraint(['medical_examination_id'], ['medical_examinations.id'], ),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('medical_examination_details')
    op.drop_table('bills')
    op.drop_table('medical_examinations')
    op.drop_table('medicine_medicinetype')
    op.drop_table('medical_registrations')
    op.drop_table('medicines')
    op.drop_table('appointment_schedules')
    op.drop_table('users')
    op.drop_table('policies')
    op.drop_table('medicine_units')
    op.drop_table('medicine_types')
    # ### end Alembic commands ###
